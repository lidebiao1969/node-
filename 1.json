IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0
        },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrain: 0,
    readingMore: true,
    decoder: null,
    encoding: null,
        [Symbol(kPaused)
        ]: null
    },
  readable: true,
  _events: [Object: null prototype
    ] { end: [Function: responseOnEnd
        ]
    },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: 'sports.sina.com.cn',
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0
            },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: false,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
            [Symbol(kPaused)
            ]: false
        },
    readable: true,
    _events: [Object: null prototype
        ] {
      end: [Array
            ],
      free: [Function: onFree
            ],
      close: [Array
            ],
      agentRemove: [Function: onRemove
            ],
      error: [Function: socketErrorListener
            ],
      data: [Function: socketOnData
            ],
      drain: [Function: ondrain
            ]
        },
    _eventsCount: 7,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite
            ],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object
            ]
        },
    writable: true,
    allowHalfOpen: false,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: null,
    _server: null,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders
            ],
      '1': [Function: parserOnHeadersComplete
            ],
      '2': [Function: parserOnBody
            ],
      '3': [Function: parserOnMessageComplete
            ],
      '4': null,
      _headers: [],
      _url: '',
      socket: [Circular
            ],
      incoming: [Circular
            ],
      outgoing: [ClientRequest
            ],
      maxHeaderPairs: 2000,
      _consumed: false,
      onIncoming: [Function: parserOnIncomingClient
            ]
        },
    _httpMessage: ClientRequest {
      _events: [Object: null prototype
            ],
      _eventsCount: 2,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      socket: [Circular
            ],
      connection: [Circular
            ],
      _header: 'GET /5.shtml HTTP/1.1\r\nHost: sports.sina.com.cn\r\nConnection: close\r\n\r\n',
      _onPendingData: [Function: noopPendingOutput
            ],
      agent: [Agent
            ],
      socketPath: undefined,
      method: 'GET',
      insecureHTTPParser: undefined,
      path: '/5.shtml',
      _ended: false,
      res: [Circular
            ],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: [HTTPParser
            ],
      maxHeadersCount: null,
      reusedSocket: false,
            [Symbol(kCapture)
            ]: false,
            [Symbol(kNeedDrain)
            ]: false,
            [Symbol(corked)
            ]: 0,
            [Symbol(kOutHeaders)
            ]: [Object: null prototype
            ]
        },
        [Symbol(asyncId)
        ]: 2,
        [Symbol(kHandle)
        ]: TCP {
      reading: true,
      onconnection: null,
            [Symbol(owner)
            ]: [Circular
            ]
        },
        [Symbol(kSetNoDelay)
        ]: false,
        [Symbol(lastWriteQueueSize)
        ]: 0,
        [Symbol(timeout)
        ]: null,
        [Symbol(kBuffer)
        ]: null,
        [Symbol(kBufferCb)
        ]: null,
        [Symbol(kBufferGen)
        ]: null,
        [Symbol(kCapture)
        ]: false,
        [Symbol(kBytesRead)
        ]: 0,
        [Symbol(kBytesWritten)
        ]: 0
    },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: 'sports.sina.com.cn',
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0
            },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: false,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
            [Symbol(kPaused)
            ]: false
        },
    readable: true,
    _events: [Object: null prototype
        ] {
      end: [Array
            ],
      free: [Function: onFree
            ],
      close: [Array
            ],
      agentRemove: [Function: onRemove
            ],
      error: [Function: socketErrorListener
            ],
      data: [Function: socketOnData
            ],
      drain: [Function: ondrain
            ]
        },
    _eventsCount: 7,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite
            ],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object
            ]
        },
    writable: true,
    allowHalfOpen: false,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: null,
    _server: null,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders
            ],
      '1': [Function: parserOnHeadersComplete
            ],
      '2': [Function: parserOnBody
            ],
      '3': [Function: parserOnMessageComplete
            ],
      '4': null,
      _headers: [],
      _url: '',
      socket: [Circular
            ],
      incoming: [Circular
            ],
      outgoing: [ClientRequest
            ],
      maxHeaderPairs: 2000,
      _consumed: false,
      onIncoming: [Function: parserOnIncomingClient
            ]
        },
    _httpMessage: ClientRequest {
      _events: [Object: null prototype
            ],
      _eventsCount: 2,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      socket: [Circular
            ],
      connection: [Circular
            ],
      _header: 'GET /5.shtml HTTP/1.1\r\nHost: sports.sina.com.cn\r\nConnection: close\r\n\r\n',
      _onPendingData: [Function: noopPendingOutput
            ],
      agent: [Agent
            ],
      socketPath: undefined,
      method: 'GET',
      insecureHTTPParser: undefined,
      path: '/5.shtml',
      _ended: false,
      res: [Circular
            ],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: [HTTPParser
            ],
      maxHeadersCount: null,
      reusedSocket: false,
            [Symbol(kCapture)
            ]: false,
            [Symbol(kNeedDrain)
            ]: false,
            [Symbol(corked)
            ]: 0,
            [Symbol(kOutHeaders)
            ]: [Object: null prototype
            ]
        },
        [Symbol(asyncId)
        ]: 2,
        [Symbol(kHandle)
        ]: TCP {
      reading: true,
      onconnection: null,
            [Symbol(owner)
            ]: [Circular
            ]
        },
        [Symbol(kSetNoDelay)
        ]: false,
        [Symbol(lastWriteQueueSize)
        ]: 0,
        [Symbol(timeout)
        ]: null,
        [Symbol(kBuffer)
        ]: null,
        [Symbol(kBufferCb)
        ]: null,
        [Symbol(kBufferGen)
        ]: null,
        [Symbol(kCapture)
        ]: false,
        [Symbol(kBytesRead)
        ]: 0,
        [Symbol(kBytesWritten)
        ]: 0
    },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    server: 'nginx',
    date: 'Sun,
        02 Aug 2020 13: 10: 35 GMT',
    'content-type': 'text/html',
    'transfer-encoding': 'chunked',
    connection: 'close',
    vary: 'Accept-Encoding',
    etag: 'W/"5a421919-3f2"',
    'edge-copy-time': '1596373835364',
    age: '0',
    via: 'http/1.1 cmcc.guangzhou.union.101 (ApacheTrafficServer/6.2.1 [cMsSf
        ]), http/1.1 cmcc.jiangxi.union.172 (ApacheTrafficServer/6.2.1 [cMsSf
        ])',      
    'x-via-edge': '1596373835325f6188875ee55a9750cd4030c',
    'x-cache': 'MISS.172',
    'x-via-cdn': 'f=edge,s=cmcc.jiangxi.union.173.nb.sinaedge.com,c=117.136.24.246;f=Edge,s=cmcc.jiangxi.union.172,c=117.169.85.173;f=edge,s=cmcc.guangzhou.union.82.nb.sinaedge.com,c=117.169.85.172;f=Edge,s=cmcc.guangzhou.union.101,c=183.232.24.82;f=edge,s=ctc.guangzhou.content-storage.118.nb.sinaedge.com,c=172.16.174.87;'
    },
  rawHeaders: [
    'Server',
    'nginx',
    'Date',
    'Sun,
        02 Aug 2020 13: 10: 35 GMT',
    'Content-Type',
    'text/html',
    'Transfer-Encoding',
    'chunked',
    'Connection',
    'close',
    'Vary',
    'Accept-Encoding',
    'ETag',
    'W/"5a421919-3f2"',
    'Edge-Copy-Time',
    '1596373835364',
    'Age',
    '0',
    'Via',
    'http/1.1 cmcc.guangzhou.union.101 (ApacheTrafficServer/6.2.1 [cMsSf
        ]), http/1.1 cmcc.jiangxi.union.172 (ApacheTrafficServer/6.2.1 [cMsSf
        ])',
    'X-Via-Edge',
    '1596373835325f6188875ee55a9750cd4030c',
    'X-Cache',
    'MISS.172',
    'X-Via-CDN',
    'f=edge,s=cmcc.jiangxi.union.173.nb.sinaedge.com,c=117.136.24.246;f=Edge,s=cmcc.jiangxi.union.172,c=117.169.85.173;f=edge,s=cmcc.guangzhou.union.82.nb.sinaedge.com,c=117.169.85.172;f=Edge,s=cmcc.guangzhou.union.101,c=183.232.24.82;f=edge,s=ctc.guangzhou.content-storage.118.nb.sinaedge.com,c=172.16.174.87;'
    ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 404,
  statusMessage: 'Not Found',
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: 'sports.sina.com.cn',
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0
            },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: false,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
            [Symbol(kPaused)
            ]: false
        },
    readable: true,
    _events: [Object: null prototype
        ] {
      end: [Array
            ],
      free: [Function: onFree
            ],
      close: [Array
            ],
      agentRemove: [Function: onRemove
            ],
      error: [Function: socketErrorListener
            ],
      data: [Function: socketOnData
            ],
      drain: [Function: ondrain
            ]
        },
    _eventsCount: 7,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite
            ],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object
            ]
        },
    writable: true,
    allowHalfOpen: false,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: null,
    _server: null,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders
            ],
      '1': [Function: parserOnHeadersComplete
            ],
      '2': [Function: parserOnBody
            ],
      '3': [Function: parserOnMessageComplete
            ],
      '4': null,
      _headers: [],
      _url: '',
      socket: [Circular
            ],
      incoming: [Circular
            ],
      outgoing: [ClientRequest
            ],
      maxHeaderPairs: 2000,
      _consumed: false,
      onIncoming: [Function: parserOnIncomingClient
            ]
        },
    _httpMessage: ClientRequest {
      _events: [Object: null prototype
            ],
      _eventsCount: 2,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      socket: [Circular
            ],
      connection: [Circular
            ],
      _header: 'GET /5.shtml HTTP/1.1\r\nHost: sports.sina.com.cn\r\nConnection: close\r\n\r\n',
      _onPendingData: [Function: noopPendingOutput
            ],
      agent: [Agent
            ],
      socketPath: undefined,
      method: 'GET',
      insecureHTTPParser: undefined,
      path: '/5.shtml',
      _ended: false,
      res: [Circular
            ],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: [HTTPParser
            ],
      maxHeadersCount: null,
      reusedSocket: false,
            [Symbol(kCapture)
            ]: false,
            [Symbol(kNeedDrain)
            ]: false,
            [Symbol(corked)
            ]: 0,
            [Symbol(kOutHeaders)
            ]: [Object: null prototype
            ]
        },
        [Symbol(asyncId)
        ]: 2,
        [Symbol(kHandle)
        ]: TCP {
      reading: true,
      onconnection: null,
            [Symbol(owner)
            ]: [Circular
            ]
        },
        [Symbol(kSetNoDelay)
        ]: false,
        [Symbol(lastWriteQueueSize)
        ]: 0,
        [Symbol(timeout)
        ]: null,
        [Symbol(kBuffer)
        ]: null,
        [Symbol(kBufferCb)
        ]: null,
        [Symbol(kBufferGen)
        ]: null,
        [Symbol(kCapture)
        ]: false,
        [Symbol(kBytesRead)
        ]: 0,
        [Symbol(kBytesWritten)
        ]: 0
    },
  _consuming: false,
  _dumped: false,
  req: ClientRequest {
    _events: [Object: null prototype
        ] {
      error: [Function
            ],
      prefinish: [Function: requestOnPrefinish
            ]
        },
    _eventsCount: 2,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'sports.sina.com.cn',
      _readableState: [ReadableState
            ],
      readable: true,
      _events: [Object: null prototype
            ],
      _eventsCount: 7,
      _maxListeners: undefined,
      _writableState: [WritableState
            ],
      writable: true,
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      parser: [HTTPParser
            ],
      _httpMessage: [Circular
            ],
            [Symbol(asyncId)
            ]: 2,
            [Symbol(kHandle)
            ]: [TCP
            ],
            [Symbol(kSetNoDelay)
            ]: false,
            [Symbol(lastWriteQueueSize)
            ]: 0,
            [Symbol(timeout)
            ]: null,
            [Symbol(kBuffer)
            ]: null,
            [Symbol(kBufferCb)
            ]: null,
            [Symbol(kBufferGen)
            ]: null,
            [Symbol(kCapture)
            ]: false,
            [Symbol(kBytesRead)
            ]: 0,
            [Symbol(kBytesWritten)
            ]: 0
        },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'sports.sina.com.cn',
      _readableState: [ReadableState
            ],
      readable: true,
      _events: [Object: null prototype
            ],
      _eventsCount: 7,
      _maxListeners: undefined,
      _writableState: [WritableState
            ],
      writable: true,
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      parser: [HTTPParser
            ],
      _httpMessage: [Circular
            ],
            [Symbol(asyncId)
            ]: 2,
            [Symbol(kHandle)
            ]: [TCP
            ],
            [Symbol(kSetNoDelay)
            ]: false,
            [Symbol(lastWriteQueueSize)
            ]: 0,
            [Symbol(timeout)
            ]: null,
            [Symbol(kBuffer)
            ]: null,
            [Symbol(kBufferCb)
            ]: null,
            [Symbol(kBufferGen)
            ]: null,
            [Symbol(kCapture)
            ]: false,
            [Symbol(kBytesRead)
            ]: 0,
            [Symbol(kBytesWritten)
            ]: 0
        },
    _header: 'GET /5.shtml HTTP/1.1\r\nHost: sports.sina.com.cn\r\nConnection: close\r\n\r\n',
    _onPendingData: [Function: noopPendingOutput
        ],
    agent: Agent {
      _events: [Object: null prototype
            ],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 80,
      protocol: 'http:',
      options: [Object
            ],
      requests: {},
      sockets: [Object
            ],
      freeSockets: {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
            [Symbol(kCapture)
            ]: false
        },
    socketPath: undefined,
    method: 'GET',
    insecureHTTPParser: undefined,
    path: '/5.shtml',
    _ended: false,
    res: [Circular
        ],
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders
            ],
      '1': [Function: parserOnHeadersComplete
            ],
      '2': [Function: parserOnBody
            ],
      '3': [Function: parserOnMessageComplete
            ],
      '4': null,
      _headers: [],
      _url: '',
      socket: [Socket
            ],
      incoming: [Circular
            ],
      outgoing: [Circular
            ],
      maxHeaderPairs: 2000,
      _consumed: false,
      onIncoming: [Function: parserOnIncomingClient
            ]
        },
    maxHeadersCount: null,